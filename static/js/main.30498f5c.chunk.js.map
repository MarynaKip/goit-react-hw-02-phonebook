{"version":3,"sources":["components/Contacts/index.jsx","components/ContactItem/index.jsx","components/ContactList/index.jsx","App.js","index.js"],"names":["initialState","id","name","number","Contacts","onSubmit","useState","state","setState","handleChange","e","prevState","target","value","preventDefault","newItem","Date","now","Number","type","onChange","pattern","title","required","useStyles","createUseStyles","item","display","marginBottom","alignItems","ContactItem","contact","classes","className","list","listStyle","margin","padding","ContactList","contacts","console","log","map","App","filter","newContact","prev","ReactDOM","render","document","getElementById"],"mappings":"iRAEMA,EAAe,CACnBC,GAAI,GAEJC,KAAM,GACNC,OAAQ,IA4DKC,EAzDE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAASN,GADF,mBAC1BO,EAD0B,KACnBC,EADmB,KAGzBN,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OAcRM,EAAe,SAACC,GACpBF,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,kBAEND,EAAEE,OAAOV,KAAOQ,EAAEE,OAAOC,YAI9B,OACE,mCACE,uBAAMR,SArBW,SAACK,GACpBA,EAAEI,iBAEF,IAAMC,EAAU,CACdd,GAAIe,KAAKC,MACTf,OACAC,OAAQe,OAAOf,IAGjBE,EAASU,IAYP,UACE,kCACE,yCACA,uBACEI,KAAK,OACLN,MAAOX,EACPA,KAAK,OACLkB,SAAUX,EACVY,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,gCACE,uBACEJ,KAAK,MACLN,MAAOV,EACPD,KAAK,SACLkB,SAAUX,EACVY,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,MAGZ,wBAAQJ,KAAK,SAAb,yB,OCzDFK,EAAYC,YAAgB,CAChCC,KAAM,CACJC,QAAS,OACTC,aAAc,GACdC,WAAY,gBAuBDC,EAnBK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACfC,EAAUR,IAEhB,OACE,qBAAqBS,UAAWD,EAAQN,KAAxC,UACGK,EAAQ7B,KACR6B,EAAQ5B,SAFF4B,EAAQ9B,KCZfuB,EAAYC,YAAgB,CAChCS,KAAM,CACJC,UAAW,OACXC,OAAQ,EACRC,QAAS,MAgBEC,EAZK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfP,EAAUR,IAEhB,OADAgB,QAAQC,IAAIF,GAEV,oBAAIN,UAAWD,EAAQE,KAAvB,SACGK,EAASG,KAAI,SAACX,GAAD,OACZ,cAAC,EAAD,CAAaA,QAASA,UC4BfY,EAxCH,WAAO,IAAD,EACUrC,mBAAS,CAAEsC,OAAQ,GAAIL,SAAU,KAD3C,mBACThC,EADS,KACFC,EADE,KAERoC,EAAqBrC,EAArBqC,OAAQL,EAAahC,EAAbgC,SAsBhB,OACE,qCACE,yCACA,uBACEpB,KAAK,OACLN,MAAO+B,EACP1C,KAAK,SACLkB,SAdqB,SAACV,GAC1BF,EAAS,CACPoC,OAAQlC,EAAEE,OAAOC,WAcjB,cAAC,EAAD,CAAUR,SA7BW,SAACwC,GACxBrC,GAAS,SAACsC,GAAD,MAAW,CAClBF,OAAQE,EAAKF,OACbL,SAAS,GAAD,mBAAMO,EAAKP,UAAX,CAAqBM,WA4B7B,cAAC,EAAD,CAAaN,SAAUA,QCnC7BQ,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.30498f5c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst Contacts = ({ onSubmit }) => {\r\n  const [state, setState] = useState(initialState);\r\n  //const [filter, setFilter] = useState(\"\");\r\n  const { name, number } = state;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      id: Date.now(), // uuid\r\n      name,\r\n      number: Number(number),\r\n    };\r\n    //contacts.push(newItem);\r\n    onSubmit(newItem);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Name:</span>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">+ Add</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    display: \"flex\",\r\n    marginBottom: 10,\r\n    alignItems: \"flex-start\",\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <li key={contact.id} className={classes.item}>\r\n      {contact.name}\r\n      {contact.number}\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    number: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"../ContactItem\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  const classes = useStyles();\r\n  console.log(contacts);\r\n  return (\r\n    <ul className={classes.list}>\r\n      {contacts.map((contact) => (\r\n        <ContactItem contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState({ filter: \"\", contacts: [] });\r\n  const { filter, contacts } = state;\r\n\r\n  const handleAddContact = (newContact) => {\r\n    setState((prev) => ({\r\n      filter: prev.filter,\r\n      contacts: [...prev.contacts, newContact],\r\n    }));\r\n  };\r\n\r\n  // const filterContacts = (contacts, filter) => {\r\n  //   contacts.filter((contact) =>\r\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  //   );\r\n  // };\r\n\r\n  const handleFilterChange = (e) => {\r\n    setState({\r\n      filter: e.target.value,\r\n      // contacts: filterContacts,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span>Find:</span>\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        name=\"filter\"\r\n        onChange={handleFilterChange}\r\n      />\r\n      <Contacts onSubmit={handleAddContact} />\r\n\r\n      <ContactList contacts={contacts} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}